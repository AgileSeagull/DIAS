version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: dias-postgres-dev
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: dias
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/config/schema.sql:/docker-entrypoint-initdb.d/schema.sql
      - ./backend/config/sns-schema.sql:/docker-entrypoint-initdb.d/sns-schema.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - dias-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: dias-backend-dev
    environment:
      NODE_ENV: development
      PORT: 5000
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/dias
      JWT_SECRET: development_secret_key_change_in_production
      JWT_EXPIRES_IN: 7d
      # AWS SNS Configuration
      AWS_REGION: ${AWS_REGION:-ap-south-1}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID:-}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY:-}
    ports:
      - "5000:5000"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - /app/node_modules
    command: npm run dev
    networks:
      - dias-network

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: dias-frontend-dev
    environment:
      VITE_API_BASE_URL: http://localhost:5000
    ports:
      - "5173:5173"
    depends_on:
      - backend
    volumes:
      - .:/app
      - /app/node_modules
    command: npm run dev -- --host
    networks:
      - dias-network

volumes:
  postgres_data:

networks:
  dias-network:
    driver: bridge

